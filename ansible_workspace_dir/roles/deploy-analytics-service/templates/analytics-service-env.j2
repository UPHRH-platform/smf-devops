server.port={{ service_analytics_port }}

spring.datasource.url=jdbc:mysql://{{ mysql_host }}:3306/smfanalytics
spring.datasource.username={{ mysql_username }}
spring.datasource.password={{ mysql_password }}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

#----------------------------- ELASTIC SEARCH CONFIGURATIONS ------------------------------#
services.esindexer.quadnary.host=http://{{ elastic_host }}/
services.esindexer.quadnary.host.name={{ elastic_host }}
services.esindexer.quadnary.host.port=9200
services.esindexer.quadnary.username={{ elastic_username }}
services.esindexer.quadnary.password={{ elastic_password }}

# Kronos-RAIN Production
services.esindexer.primary.host={{ elastic_host }}
services.esindexer.primary.host.name={{ elastic_host }}
services.esindexer.primary.host.port=9200
services.esindexer.primary.username={{ elastic_username }}
services.esindexer.primary.password={{ elastic_password }}

#services.esindexer.secondary.host={{ elastic_host }}
#services.esindexer.secondary.host.name={{ elastic_host }}
#services.esindexer.secondary.host.port=9200
#services.esindexer.secondary.username={{ elastic_username }}
#services.esindexer.secondary.password={{ elastic_password }}

# Anuvad 
services.esindexer.secondary.host={{ elastic_host }}
services.esindexer.secondary.host.name={{ elastic_host }}
services.esindexer.secondary.host.port=9200
services.esindexer.secondary.username={{ elastic_username }}
services.esindexer.secondary.password={{ elastic_password }}



services.esindexer.ternary.host={{ elastic_host }}
services.esindexer.ternary.host.name={{ elastic_host }}
services.esindexer.ternary.host.port=9200
services.esindexer.ternary.username={{ elastic_username }}
services.esindexer.ternary.password={{ elastic_password }}
es.index.name=_transaction
es.document.type=transaction
es.target.index.name=store_target
es.target.document.type=storeTarget
config.schema.paths=classpath*:schema/*.json

#----------------------------- MISCELLANEOUS CONFIGURATION ----------------------------------#
top.performance.record.count=5

es.services.esindexer.host.search=/_search

es.username={{ elastic_username }}
es.password={{ elastic_password }}

#----------------------------- AMAZON S3 CREDENTIALS -------------------------------------------------#
aws.access.key.id=test 
aws.access.key.secret=test 
aws.region=ap-south-1
aws.s3.audio.bucket=dss-project-bucket

#---------------------------- MDMS ---------------------------------------------------------------------#
egov.mdms-service.target.url=https://{{ egov_domain }}/egov-mdms-service/v1/_search
egov.mdms-service.request={"RequestInfo":{"authToken":""},"MdmsCriteria":{"tenantId":"pb","moduleDetails":[{"moduleName":"tenant","masterDetails":[{"name":"tenants"}]}]}}

# KAFKA SERVER CONFIGURATIONS
spring.kafka.bootstrap.servers={{ kafka_host }}:9092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# KAFKA PRODUCER CONFIGURATIONS
kafka.producer.config.retries_config=0
kafka.producer.config.batch_size_config=100000
kafka.producer.config.linger_ms_config=100
kafka.producer.config.buffer_memory_config=66554432

